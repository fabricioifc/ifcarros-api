# Generated by Django 2.2.6 on 2020-03-19 22:14

import api.validators
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$'), 'Informe um usuário válido.', 'invalid')], verbose_name='Usuário')),
                ('name', models.CharField(max_length=300, verbose_name='Nome')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('siape', models.PositiveIntegerField(blank=True, null=True, verbose_name='Matrícula/Siape')),
                ('funcao', models.CharField(blank=True, choices=[('P', 'Professor'), ('A', 'Aluno'), ('S', 'Técnico'), ('O', 'Nenhuma das Opções')], max_length=45, null=True, verbose_name='Função')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, unique=True, validators=[api.validators.validate_CPF], verbose_name='CPF')),
                ('is_superuser', models.BooleanField(default=False, help_text='Indica que este usuário é Administrador', verbose_name='Admin')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Passageiro',
                'verbose_name_plural': 'Passageiros',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtnascimento', models.DateField()),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('cidade', models.CharField(max_length=60)),
                ('cep', models.CharField(max_length=8)),
                ('avatar', models.ImageField(blank=True, upload_to='uploads')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Solicitation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('finalidade', models.TextField()),
                ('dthrsaida', models.DateTimeField(verbose_name='Data da Saída')),
                ('dthrretorno', models.DateTimeField(verbose_name='Data do Retorno')),
                ('dthrrequisicao', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Solicitado em')),
                ('passageiros', models.ManyToManyField(to='api.Passenger', verbose_name='Passageiros')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Solicitação',
                'verbose_name_plural': 'Solicitações',
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marca', models.CharField(max_length=45)),
                ('modelo', models.CharField(max_length=45)),
                ('ano', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(2100)])),
                ('km', models.PositiveIntegerField()),
                ('descricao', models.TextField(blank=True)),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='uploads/car', verbose_name='Foto do Veículo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Carro',
                'verbose_name_plural': 'Carros',
            },
        ),
        migrations.CreateModel(
            name='Autorization',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('motivo', models.TextField()),
                ('dthrautorizacao', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Autorizado em')),
                ('status', models.CharField(choices=[('analise', 'Em Análise'), ('autorizado', 'Autorizado'), ('nao_autorizado', 'Não Autorizado')], default='analise', max_length=30, verbose_name='Status')),
                ('solicitation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='autorization', to='api.Solicitation')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Autorizado por')),
            ],
            options={
                'verbose_name': 'Autorização',
                'verbose_name_plural': 'Autorizações',
            },
        ),
    ]
